Profile image changed, updating user marker: https://storage.googleapis.com/jemzy-images-storage/profiles/google-oauth2|117032826996185616207/0cdda868-9fae-4f99-b2fc-36aff967acdc.jpg
eruda.js:2 Marker placement effect running - videos: 0 googleMap: true
eruda.js:2 No videos to place markers for
eruda.js:2 Zoom level changed to: 15 Total markers: 0
eruda.js:2 Profile data loaded: Object
eruda.js:2 Profile image URL: https://storage.googleapis.com/jemzy-images-storage/profiles/google-oauth2|117032826996185616207/0cdda868-9fae-4f99-b2fc-36aff967acdc.jpg
eruda.js:2 Ready Player Me URL: null
eruda.js:2 Marker placement effect running - videos: 0 googleMap: true
eruda.js:2 No videos to place markers for
eruda.js:2 Zoom level changed to: 15 Total markers: 0
eruda.js:2 🔔 OneSignal: Starting initialization...
eruda.js:2 🔔 OneSignal: SDK script loaded successfully
eruda.js:2 🔔 OneSignal: Initializing with config...
eruda.js:2 Marker placement effect running - videos: 0 googleMap: true
eruda.js:2 No videos to place markers for
2eruda.js:2 Zoom level changed to: 15 Total markers: 0
WorkerMessenger.ts:234 Event handler of 'message' event must be added on the initial evaluation of worker script.
listen @ WorkerMessenger.ts:234Understand this warning
eruda.js:2 🔔 OneSignal: Initialized successfully
eruda.js:2 OneSignal tags added: Object
eruda.js:2 OneSignal external user ID set: google-oauth2|117032826996185616207
eruda.js:2 🔐 iOS: Checking existing permissions before request...
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 0, isMobileDevice: false, shouldShowSwitch: false, cameraReady: false, isRecording: false, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: false, isRecording: false, shouldShowRecord: false, availableCamerasCount: 0, videoRefHasStream: false, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: false, isRecording: false, hasVideoStream: false, shouldShow: false, …}
eruda.js:2 🔐 iOS PERMISSION CHECK: {camera: 'granted', microphone: 'granted'}
eruda.js:2 ✅ iOS: Permissions already granted, no prompt needed
eruda.js:2 📷 Attempting user camera with constraints: {width: {…}, height: {…}, frameRate: {…}, facingMode: {…}}
eruda.js:2 ✅ iOS: Permissions granted and stored in localStorage
eruda.js:2 ✅ user camera initialized: 1920x1080
eruda.js:2 📷 Camera facing mode: unknown
eruda.js:2 Video track settings: {aspectRatio: 1.7777777777777777, deviceId: 'b7c8332573fb493df969b606bc21b908cf863cf726f6dea1ae59d87ce7445826', frameRate: 30, groupId: '37997ab92b131b6988870f837a222d8a1a1895855f9c3a55b6450af39d241288', height: 1080, …}
eruda.js:2 Audio tracks found: 1
eruda.js:2 Video tracks found: 1
eruda.js:2 🎯 IPAD DEBUG: Setting srcObject on video element
eruda.js:2 🎯 IPAD DETECTION: {userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) Ap…KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36', platform: 'MacIntel', maxTouchPoints: 0, isIpad: false}
eruda.js:2 📷 Available cameras: 1 [{…}]
eruda.js:2 🎯 DEBUG: Setting cameraReady to true, availableCameras count: 0
eruda.js:2 🎯 CAMERA INIT: About to set cameraReady to true after user camera initialization
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: false, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: false, shouldShowRecord: true, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: false, hasVideoStream: true, shouldShow: true, …}
eruda.js:2 🎯 IPAD DEBUG: Video metadata loaded, cameraReady before: false
eruda.js:2 🎯 IPAD DEBUG: Video metadata loaded, cameraReady after setCameraReady(true)
eruda.js:2 🎯 IPAD DEBUG: Video can play, forcing cameraReady to true
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: false, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: false, shouldShowRecord: true, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: false, hasVideoStream: true, shouldShow: true, …}
eruda.js:2 🎯 IPAD DEBUG: Video play event, forcing cameraReady to true
eruda.js:2 🎯 IPAD DEBUG: Video is playing, forcing cameraReady to true
eruda.js:2 🎯 IPAD FIX: Universal backup timer (500ms) ensuring cameraReady stays true
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: false, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: false, shouldShowRecord: true, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: false, hasVideoStream: true, shouldShow: true, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: false, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: false, shouldShowRecord: true, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: false, hasVideoStream: true, shouldShow: true, …}
eruda.js:2 🎯 IPAD FIX: Universal backup timer (1000ms) ensuring cameraReady stays true
eruda.js:2 🎯 IPAD FIX: Universal backup timer (2000ms) ensuring cameraReady stays true
eruda.js:2 🔍 DIAGNOSTIC: MediaRecorder format support analysis
eruda.js:2 Browser: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
eruda.js:2 Format "video/webm; codecs="vp8,opus"": SUPPORTED
eruda.js:2 Format "video/webm; codecs="vp9,opus"": SUPPORTED
eruda.js:2 Format "video/webm; codecs="vp8"": SUPPORTED
eruda.js:2 Format "video/webm": SUPPORTED
eruda.js:2 Format "video/mp4; codecs="avc1.42001E, mp4a.40.2"": SUPPORTED
eruda.js:2 Format "video/mp4; codecs="avc1.4D401E, mp4a.40.2"": SUPPORTED
eruda.js:2 Format "video/mp4": SUPPORTED
eruda.js:2 Format "video/x-matroska;codecs=avc1": SUPPORTED
eruda.js:2 🎥 Recording at 1920x1080 with target bitrate: 8Mbps
eruda.js:2 ✅ Selected format: video/webm; codecs="vp9,opus" with 8Mbps video bitrate
eruda.js:2 Recording with audio tracks: 1
eruda.js:2 MediaRecorder MIME type: video/webm; codecs="vp9,opus"
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 Data chunk received, size: 401892
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 Data chunk received, size: 715922
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
eruda.js:2 Final recording duration captured: 2.87 seconds
eruda.js:2 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: false, isRecording: false, …}
eruda.js:2 🎯 RECORD BUTTON DEBUG: {cameraReady: false, isRecording: false, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: false, …}
eruda.js:2 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: false, isRecording: false, hasVideoStream: false, shouldShow: false, …}
eruda.js:2 Data chunk received, size: 658659
eruda.js:2 Final blob created, size: 1776473 type: video/webm;codecs=vp9,opus
eruda.js:2 🔍 DIAGNOSTIC: Binary data inspection
eruda.js:2 🔍 Testing local video playback before upload...
eruda.js:2 📥 Local Playback: Starting to load video...
eruda.js:2 First 16 bytes (hex): 1a45dfa39f4286810142f7810142f281
eruda.js:2 First 16 bytes (decimal): (16) [26, 69, 223, 163, 159, 66, 134, 129, 1, 66, 247, 129, 1, 66, 242, 129]
eruda.js:2 WebM EBML signature valid: true
eruda.js:2 Number of chunks received: 3
eruda.js:2 Chunk 0: 401892 bytes, type: video/webm;codecs=vp9,opus
eruda.js:2 Chunk 1: 715922 bytes, type: video/webm;codecs=vp9,opus
eruda.js:2 Chunk 2: 658659 bytes, type: video/webm;codecs=vp9,opus
eruda.js:2 ✅ Local Playback: Video loaded metadata successfully!
eruda.js:2 ✅ Local Playback: Duration: Infinity seconds
eruda.js:2 ✅ Local Playback: Video dimensions: 1920x1080
eruda.js:2 ✅ Local Playback: Ready state: 4
eruda.js:2 Using actual recorded duration: 0 seconds
eruda.js:2 ✅ Local Playback: Video can start playing
eruda.js:2 Preview video duration change: Infinity
eruda.js:2 Preview video duration: Infinity readyState: 1
eruda.js:2 Preview video duration change: 2.86
eruda.js:2 🚀 FIXED UPLOAD: Using direct binary transfer to prevent corruption
eruda.js:2 Using recorded video duration: 2.86 seconds
eruda.js:2 Converted Blob to File: {originalType: 'video/webm;codecs=vp9,opus', newType: 'video/webm', cleanMimeType: 'video/webm', filename: 'recorded-video.webm', size: 1776473}
eruda.js:2 🔍 FRONTEND: Final video file details being sent: {type: 'video/webm', size: 1776473, isFile: true, isBlob: true, name: 'recorded-video.webm', …}
eruda.js:2 🔍 FRONTEND: FormData prepared, sending to /api/videos/upload-binary
eruda.js:2 🔍 FRONTEND: Using chunked upload to bypass proxy size limits
eruda.js:2 🔍 FRONTEND: File size: 1776473 bytes
eruda.js:2 🔍 FRONTEND: Will upload in 2 chunks of 1048576 bytes each
eruda.js:2 🔍 FRONTEND: Upload initialized with ID: 4350fcfb-5506-4369-bfff-2b6e75be7b35
eruda.js:2 🔍 FRONTEND: Uploading chunk 1/2 (1048576 bytes)
eruda.js:2 🔍 FRONTEND: Sending chunk FormData: {chunkSize: 1048576, uploadId: '4350fcfb-5506-4369-bfff-2b6e75be7b35', chunkIndex: 0, formDataKeys: Array(3)}
eruda.js:2 🔍 FRONTEND: Chunk upload response: 200 OK
eruda.js:2 ✅ FRONTEND: Chunk upload result: {message: 'Chunk uploaded successfully'}
eruda.js:2 ✅ FRONTEND: Chunk 1 uploaded successfully
eruda.js:2 🔍 FRONTEND: Uploading chunk 2/2 (727897 bytes)
eruda.js:2 🔍 FRONTEND: Sending chunk FormData: {chunkSize: 727897, uploadId: '4350fcfb-5506-4369-bfff-2b6e75be7b35', chunkIndex: 1, formDataKeys: Array(3)}
eruda.js:2 🔍 FRONTEND: Chunk upload response: 200 OK
eruda.js:2 ✅ FRONTEND: Chunk upload result: {message: 'Chunk uploaded successfully'}
eruda.js:2 ✅ FRONTEND: Chunk 2 uploaded successfully
eruda.js:2 🔍 FRONTEND: Completing chunked upload...
eruda.js:2 🔍 FRONTEND: Response received: {status: 200, statusText: 'OK', headers: {…}}
eruda.js:2 🔍 DELETE DEBUG: currentItem structure: {id: '30296010-4527-4516-ba2d-8d39523d422c', isVideoComment: undefined, isThreadMessage: undefined, allKeys: Array(33)}
eruda.js:2 🗑️ DELETE REQUEST: Regular video/Jem - endpoint /api/videos/30296010-4527-4516-ba2d-8d39523d422c
eruda.js:2 🔄 Cache invalidation triggered - isThreadMessage: undefined threadId: undefined videoId: undefined
eruda.js:2 🔍 DELETE DEBUG: currentItem structure: {id: 'a1c6f62e-395d-46f7-b206-0d30bf477e75', isVideoComment: undefined, isThreadMessage: undefined, allKeys: Array(33)}
eruda.js:2 🗑️ DELETE REQUEST: Regular video/Jem - endpoint /api/videos/a1c6f62e-395d-46f7-b206-0d30bf477e75
eruda.js:2 🔄 Cache invalidation triggered - isThreadMessage: undefined threadId: undefined videoId: undefined
eruda.js:2 [vite] server connection lost. Polling for restart...
b0005152-2369-429c-b74b-ddc8ecf0fc24-00-1xknbi8eytqcw.worf.replit.dev/:135 
            
            
           GET https://b0005152-2369-429c-b74b-ddc8ecf0fc24-00-1xknbi8eytqcw.worf.replit.dev/src/main.tsx?v=4xU2hJ9P7rTkD9oK2gKvd net::ERR_ABORTED 502 (Bad Gateway)Understand this error
b0005152-2369-429c-b74b-ddc8ecf0fc24-00-1xknbi8eytqcw.worf.replit.dev/:30 
            
            
           GET https://b0005152-2369-429c-b74b-ddc8ecf0fc24-00-1xknbi8eytqcw.worf.replit.dev/@react-refresh net::ERR_ABORTED 502 (Bad Gateway)Understand this error
eruda.js:2 Marker placement effect running - videos: 0 googleMap: false
eruda.js:2 Google Maps not ready yet, skipping marker placement
eruda.js:2 Marker placement effect running - videos: 0 googleMap: false
eruda.js:2 Google Maps not ready yet, skipping marker placement
eruda.js:2 🔔 OneSignal: Starting initialization...
eruda.js:2 Marker placement effect running - videos: 0 googleMap: false
eruda.js:2 Google Maps not ready yet, skipping marker placement
eruda.js:2 Profile data loaded: {id: 'google-oauth2|117032826996185616207', email: 'jemzyapp@gmail.com', firstName: 'Andrew', lastName: 'Stargaze', profileImageUrl: 'https://storage.googleapis.com/jemzy-images-storag…85616207/0cdda868-9fae-4f99-b2fc-36aff967acdc.jpg', …}
eruda.js:2 Profile image URL: https://storage.googleapis.com/jemzy-images-storage/profiles/google-oauth2|117032826996185616207/0cdda868-9fae-4f99-b2fc-36aff967acdc.jpg
eruda.js:2 Ready Player Me URL: null
eruda.js:2 🔔 OneSignal: SDK script loaded successfully
eruda.js:2 Google Maps JavaScript API: A Map's styles property cannot be set when a mapId is present. When a mapId is present, map styles are controlled via the cloud console. Please see documentation at https://developers.google.com/maps/documentation/javascript/styling#cloud_tooling
Mt.forEach.n.<computed> @ Console.js:61
styles_changed @ main.js:410
om @ main.js:160
_.mm.bindTo @ main.js:318
Bba @ main.js:193
_.ar @ main.js:239
initializeMap @ MapInterface.tsx:572
await in initializeMap
(anonymous) @ MapInterface.tsx:643
commitHookEffectListMount @ chunk-RPCDYKBN.js?v=e65489cd:16915
commitPassiveMountOnFiber @ chunk-RPCDYKBN.js?v=e65489cd:18156
commitPassiveMountEffects_complete @ chunk-RPCDYKBN.js?v=e65489cd:18129
commitPassiveMountEffects_begin @ chunk-RPCDYKBN.js?v=e65489cd:18119
commitPassiveMountEffects @ chunk-RPCDYKBN.js?v=e65489cd:18109
flushPassiveEffectsImpl @ chunk-RPCDYKBN.js?v=e65489cd:19490
flushPassiveEffects @ chunk-RPCDYKBN.js?v=e65489cd:19447
commitRootImpl @ chunk-RPCDYKBN.js?v=e65489cd:19416
commitRoot @ chunk-RPCDYKBN.js?v=e65489cd:19277
performSyncWorkOnRoot @ chunk-RPCDYKBN.js?v=e65489cd:18895
flushSyncCallbacks @ chunk-RPCDYKBN.js?v=e65489cd:9119
(anonymous) @ chunk-RPCDYKBN.js?v=e65489cd:18627
setTimeout
scheduleFn @ @tanstack_react-query.js?v=e65489cd:555
flush @ @tanstack_react-query.js?v=e65489cd:569
batch @ @tanstack_react-query.js?v=e65489cd:587
dispatch_fn @ @tanstack_react-query.js?v=e65489cd:996
setData @ @tanstack_react-query.js?v=e65489cd:696
onSuccess @ @tanstack_react-query.js?v=e65489cd:897
resolve @ @tanstack_react-query.js?v=e65489cd:456
Promise.then
run @ @tanstack_react-query.js?v=e65489cd:498
start @ @tanstack_react-query.js?v=e65489cd:536
fetch @ @tanstack_react-query.js?v=e65489cd:926
executeFetch_fn @ @tanstack_react-query.js?v=e65489cd:2211
onSubscribe @ @tanstack_react-query.js?v=e65489cd:1898
subscribe @ @tanstack_react-query.js?v=e65489cd:24
(anonymous) @ @tanstack_react-query.js?v=e65489cd:3022
subscribeToStore @ chunk-RPCDYKBN.js?v=e65489cd:11984
commitHookEffectListMount @ chunk-RPCDYKBN.js?v=e65489cd:16915
commitPassiveMountOnFiber @ chunk-RPCDYKBN.js?v=e65489cd:18156
commitPassiveMountEffects_complete @ chunk-RPCDYKBN.js?v=e65489cd:18129
commitPassiveMountEffects_begin @ chunk-RPCDYKBN.js?v=e65489cd:18119
commitPassiveMountEffects @ chunk-RPCDYKBN.js?v=e65489cd:18109
flushPassiveEffectsImpl @ chunk-RPCDYKBN.js?v=e65489cd:19490
flushPassiveEffects @ chunk-RPCDYKBN.js?v=e65489cd:19447
commitRootImpl @ chunk-RPCDYKBN.js?v=e65489cd:19416
commitRoot @ chunk-RPCDYKBN.js?v=e65489cd:19277
performSyncWorkOnRoot @ chunk-RPCDYKBN.js?v=e65489cd:18895
flushSyncCallbacks @ chunk-RPCDYKBN.js?v=e65489cd:9119
(anonymous) @ chunk-RPCDYKBN.js?v=e65489cd:18627
setTimeout
scheduleFn @ @tanstack_react-query.js?v=e65489cd:555
flush @ @tanstack_react-query.js?v=e65489cd:569
batch @ @tanstack_react-query.js?v=e65489cd:587
dispatch_fn @ @tanstack_react-query.js?v=e65489cd:996
setData @ @tanstack_react-query.js?v=e65489cd:696
onSuccess @ @tanstack_react-query.js?v=e65489cd:897
resolve @ @tanstack_react-query.js?v=e65489cd:456
Promise.then
run @ @tanstack_react-query.js?v=e65489cd:498
start @ @tanstack_react-query.js?v=e65489cd:536
fetch @ @tanstack_react-query.js?v=e65489cd:926
executeFetch_fn @ @tanstack_react-query.js?v=e65489cd:2211
onSubscribe @ @tanstack_react-query.js?v=e65489cd:1898
subscribe @ @tanstack_react-query.js?v=e65489cd:24
(anonymous) @ @tanstack_react-query.js?v=e65489cd:3022
subscribeToStore @ chunk-RPCDYKBN.js?v=e65489cd:11984
commitHookEffectListMount @ chunk-RPCDYKBN.js?v=e65489cd:16915
commitPassiveMountOnFiber @ chunk-RPCDYKBN.js?v=e65489cd:18156
commitPassiveMountEffects_complete @ chunk-RPCDYKBN.js?v=e65489cd:18129
commitPassiveMountEffects_begin @ chunk-RPCDYKBN.js?v=e65489cd:18119
commitPassiveMountEffects @ chunk-RPCDYKBN.js?v=e65489cd:18109
flushPassiveEffectsImpl @ chunk-RPCDYKBN.js?v=e65489cd:19490
flushPassiveEffects @ chunk-RPCDYKBN.js?v=e65489cd:19447
performSyncWorkOnRoot @ chunk-RPCDYKBN.js?v=e65489cd:18868
flushSyncCallbacks @ chunk-RPCDYKBN.js?v=e65489cd:9119
commitRootImpl @ chunk-RPCDYKBN.js?v=e65489cd:19432
commitRoot @ chunk-RPCDYKBN.js?v=e65489cd:19277
finishConcurrentRender @ chunk-RPCDYKBN.js?v=e65489cd:18805
performConcurrentWorkOnRoot @ chunk-RPCDYKBN.js?v=e65489cd:18718
workLoop @ chunk-RPCDYKBN.js?v=e65489cd:197
flushWork @ chunk-RPCDYKBN.js?v=e65489cd:176
performWorkUntilDeadline @ chunk-RPCDYKBN.js?v=e65489cd:384Understand this warning
eruda.js:2 🔔 OneSignal: Initializing with config...
eruda.js:2 🔔 OneSignal: Initialized successfully
eruda.js:2 OneSignal tags added: {userId: 'google-oauth2|117032826996185616207', username: 'andrew.stargaze'}
eruda.js:2 OneSignal external user ID set: google-oauth2|117032826996185616207
eruda.js:2 [vite] server connection lost. Polling for restart...
Console.js:61 Marker placement effect running - videos: 0 googleMap: false
Console.js:61 Google Maps not ready yet, skipping marker placement
Console.js:61 Marker placement effect running - videos: 0 googleMap: false
Console.js:61 Google Maps not ready yet, skipping marker placement
Console.js:61 🔔 OneSignal: Starting initialization...
Console.js:61 Marker placement effect running - videos: 0 googleMap: false
Console.js:61 Google Maps not ready yet, skipping marker placement
Console.js:61 Profile data loaded: {id: 'google-oauth2|117032826996185616207', email: 'jemzyapp@gmail.com', firstName: 'Andrew', lastName: 'Stargaze', profileImageUrl: 'https://storage.googleapis.com/jemzy-images-storag…85616207/0cdda868-9fae-4f99-b2fc-36aff967acdc.jpg', …}
Console.js:61 Profile image URL: https://storage.googleapis.com/jemzy-images-storage/profiles/google-oauth2|117032826996185616207/0cdda868-9fae-4f99-b2fc-36aff967acdc.jpg
Console.js:61 Ready Player Me URL: null
Console.js:61 🔔 OneSignal: SDK script loaded successfully
Console.js:61 🔔 OneSignal: Initializing with config...
Console.js:61 Google Maps JavaScript API: A Map's styles property cannot be set when a mapId is present. When a mapId is present, map styles are controlled via the cloud console. Please see documentation at https://developers.google.com/maps/documentation/javascript/styling#cloud_tooling
Mt.forEach.n.<computed> @ Console.js:61
styles_changed @ main.js:410
om @ main.js:160
_.mm.bindTo @ main.js:318
Bba @ main.js:193
_.ar @ main.js:239
initializeMap @ MapInterface.tsx:572
await in initializeMap
(anonymous) @ MapInterface.tsx:643
commitHookEffectListMount @ chunk-RPCDYKBN.js?v=e65489cd:16915
commitPassiveMountOnFiber @ chunk-RPCDYKBN.js?v=e65489cd:18156
commitPassiveMountEffects_complete @ chunk-RPCDYKBN.js?v=e65489cd:18129
commitPassiveMountEffects_begin @ chunk-RPCDYKBN.js?v=e65489cd:18119
commitPassiveMountEffects @ chunk-RPCDYKBN.js?v=e65489cd:18109
flushPassiveEffectsImpl @ chunk-RPCDYKBN.js?v=e65489cd:19490
flushPassiveEffects @ chunk-RPCDYKBN.js?v=e65489cd:19447
commitRootImpl @ chunk-RPCDYKBN.js?v=e65489cd:19416
commitRoot @ chunk-RPCDYKBN.js?v=e65489cd:19277
performSyncWorkOnRoot @ chunk-RPCDYKBN.js?v=e65489cd:18895
flushSyncCallbacks @ chunk-RPCDYKBN.js?v=e65489cd:9119
(anonymous) @ chunk-RPCDYKBN.js?v=e65489cd:18627
setTimeout
scheduleFn @ @tanstack_react-query.js?v=e65489cd:555
flush @ @tanstack_react-query.js?v=e65489cd:569
batch @ @tanstack_react-query.js?v=e65489cd:587
dispatch_fn @ @tanstack_react-query.js?v=e65489cd:996
setData @ @tanstack_react-query.js?v=e65489cd:696
onSuccess @ @tanstack_react-query.js?v=e65489cd:897
resolve @ @tanstack_react-query.js?v=e65489cd:456
Promise.then
run @ @tanstack_react-query.js?v=e65489cd:498
start @ @tanstack_react-query.js?v=e65489cd:536
fetch @ @tanstack_react-query.js?v=e65489cd:926
executeFetch_fn @ @tanstack_react-query.js?v=e65489cd:2211
onSubscribe @ @tanstack_react-query.js?v=e65489cd:1898
subscribe @ @tanstack_react-query.js?v=e65489cd:24
(anonymous) @ @tanstack_react-query.js?v=e65489cd:3022
subscribeToStore @ chunk-RPCDYKBN.js?v=e65489cd:11984
commitHookEffectListMount @ chunk-RPCDYKBN.js?v=e65489cd:16915
commitPassiveMountOnFiber @ chunk-RPCDYKBN.js?v=e65489cd:18156
commitPassiveMountEffects_complete @ chunk-RPCDYKBN.js?v=e65489cd:18129
commitPassiveMountEffects_begin @ chunk-RPCDYKBN.js?v=e65489cd:18119
commitPassiveMountEffects @ chunk-RPCDYKBN.js?v=e65489cd:18109
flushPassiveEffectsImpl @ chunk-RPCDYKBN.js?v=e65489cd:19490
flushPassiveEffects @ chunk-RPCDYKBN.js?v=e65489cd:19447
commitRootImpl @ chunk-RPCDYKBN.js?v=e65489cd:19416
commitRoot @ chunk-RPCDYKBN.js?v=e65489cd:19277
performSyncWorkOnRoot @ chunk-RPCDYKBN.js?v=e65489cd:18895
flushSyncCallbacks @ chunk-RPCDYKBN.js?v=e65489cd:9119
(anonymous) @ chunk-RPCDYKBN.js?v=e65489cd:18627
setTimeout
scheduleFn @ @tanstack_react-query.js?v=e65489cd:555
flush @ @tanstack_react-query.js?v=e65489cd:569
batch @ @tanstack_react-query.js?v=e65489cd:587
dispatch_fn @ @tanstack_react-query.js?v=e65489cd:996
setData @ @tanstack_react-query.js?v=e65489cd:696
onSuccess @ @tanstack_react-query.js?v=e65489cd:897
resolve @ @tanstack_react-query.js?v=e65489cd:456
Promise.then
run @ @tanstack_react-query.js?v=e65489cd:498
start @ @tanstack_react-query.js?v=e65489cd:536
fetch @ @tanstack_react-query.js?v=e65489cd:926
executeFetch_fn @ @tanstack_react-query.js?v=e65489cd:2211
onSubscribe @ @tanstack_react-query.js?v=e65489cd:1898
subscribe @ @tanstack_react-query.js?v=e65489cd:24
(anonymous) @ @tanstack_react-query.js?v=e65489cd:3022
subscribeToStore @ chunk-RPCDYKBN.js?v=e65489cd:11984
commitHookEffectListMount @ chunk-RPCDYKBN.js?v=e65489cd:16915
commitPassiveMountOnFiber @ chunk-RPCDYKBN.js?v=e65489cd:18156
commitPassiveMountEffects_complete @ chunk-RPCDYKBN.js?v=e65489cd:18129
commitPassiveMountEffects_begin @ chunk-RPCDYKBN.js?v=e65489cd:18119
commitPassiveMountEffects @ chunk-RPCDYKBN.js?v=e65489cd:18109
flushPassiveEffectsImpl @ chunk-RPCDYKBN.js?v=e65489cd:19490
flushPassiveEffects @ chunk-RPCDYKBN.js?v=e65489cd:19447
performSyncWorkOnRoot @ chunk-RPCDYKBN.js?v=e65489cd:18868
flushSyncCallbacks @ chunk-RPCDYKBN.js?v=e65489cd:9119
commitRootImpl @ chunk-RPCDYKBN.js?v=e65489cd:19432
commitRoot @ chunk-RPCDYKBN.js?v=e65489cd:19277
finishConcurrentRender @ chunk-RPCDYKBN.js?v=e65489cd:18805
performConcurrentWorkOnRoot @ chunk-RPCDYKBN.js?v=e65489cd:18718
workLoop @ chunk-RPCDYKBN.js?v=e65489cd:197
flushWork @ chunk-RPCDYKBN.js?v=e65489cd:176
performWorkUntilDeadline @ chunk-RPCDYKBN.js?v=e65489cd:384Understand this warning
Console.js:61 🔔 OneSignal: Initialized successfully
Console.js:61 OneSignal tags added: {userId: 'google-oauth2|117032826996185616207', username: 'andrew.stargaze'}
Console.js:61 OneSignal external user ID set: google-oauth2|117032826996185616207
Console.js:61 User location updated to: {lat: 36.05730253501098, lng: -94.16065947734185}
Console.js:61 Marker placement effect running - videos: 0 googleMap: true
Console.js:61 No videos to place markers for
Console.js:61 Zoom level changed to: 15 Total markers: 0
Console.js:61 Marker placement effect running - videos: 0 googleMap: true
Console.js:61 No videos to place markers for
Console.js:61 Zoom level changed to: 15 Total markers: 0
Console.js:61 Zoom level changed to: 19 Total markers: 0
Console.js:61 Marker placement effect running - videos: 0 googleMap: true
Console.js:61 No videos to place markers for
Console.js:61 Zoom level changed to: 19 Total markers: 0
Console.js:61 Zoom level changed to: 19 Total markers: 0
Console.js:61 Marker placement effect running - videos: 0 googleMap: true
Console.js:61 No videos to place markers for
Console.js:61 Zoom level changed to: 19 Total markers: 0
Console.js:61 Marker placement effect running - videos: 0 googleMap: true
Console.js:61 No videos to place markers for
2Console.js:61 Zoom level changed to: 19 Total markers: 0
Console.js:61 Back button clicked - starting navigation
Console.js:61 No stored context found, using fallback navigation
Console.js:61 Navigating to home page
Console.js:61 Marker placement effect running - videos: 0 googleMap: false
Console.js:61 Google Maps not ready yet, skipping marker placement
Console.js:61 Profile data loaded: {id: 'google-oauth2|117032826996185616207', email: 'jemzyapp@gmail.com', firstName: 'Andrew', lastName: 'Stargaze', profileImageUrl: 'https://storage.googleapis.com/jemzy-images-storag…85616207/0cdda868-9fae-4f99-b2fc-36aff967acdc.jpg', …}
Console.js:61 Profile image URL: https://storage.googleapis.com/jemzy-images-storage/profiles/google-oauth2|117032826996185616207/0cdda868-9fae-4f99-b2fc-36aff967acdc.jpg
Console.js:61 Ready Player Me URL: null
Console.js:61 Google Maps JavaScript API: A Map's styles property cannot be set when a mapId is present. When a mapId is present, map styles are controlled via the cloud console. Please see documentation at https://developers.google.com/maps/documentation/javascript/styling#cloud_tooling
Mt.forEach.n.<computed> @ Console.js:61
styles_changed @ main.js:410
om @ main.js:160
_.mm.bindTo @ main.js:318
Bba @ main.js:193
_.ar @ main.js:239
initializeMap @ MapInterface.tsx:572
await in initializeMap
(anonymous) @ MapInterface.tsx:643
commitHookEffectListMount @ chunk-RPCDYKBN.js?v=e65489cd:16915
commitPassiveMountOnFiber @ chunk-RPCDYKBN.js?v=e65489cd:18156
commitPassiveMountEffects_complete @ chunk-RPCDYKBN.js?v=e65489cd:18129
commitPassiveMountEffects_begin @ chunk-RPCDYKBN.js?v=e65489cd:18119
commitPassiveMountEffects @ chunk-RPCDYKBN.js?v=e65489cd:18109
flushPassiveEffectsImpl @ chunk-RPCDYKBN.js?v=e65489cd:19490
flushPassiveEffects @ chunk-RPCDYKBN.js?v=e65489cd:19447
commitRootImpl @ chunk-RPCDYKBN.js?v=e65489cd:19416
commitRoot @ chunk-RPCDYKBN.js?v=e65489cd:19277
performSyncWorkOnRoot @ chunk-RPCDYKBN.js?v=e65489cd:18895
flushSyncCallbacks @ chunk-RPCDYKBN.js?v=e65489cd:9119
(anonymous) @ chunk-RPCDYKBN.js?v=e65489cd:18627Understand this warning
Console.js:61 Marker placement effect running - videos: 0 googleMap: true
Console.js:61 No videos to place markers for
Console.js:61 Zoom level changed to: 15 Total markers: 0
Console.js:61 Marker placement effect running - videos: 0 googleMap: true
Console.js:61 No videos to place markers for
Console.js:61 Zoom level changed to: 15 Total markers: 0
Console.js:61 User location updated to: {lat: 36.05724327942846, lng: -94.16070140304834}
Console.js:61 Marker placement effect running - videos: 0 googleMap: true
Console.js:61 No videos to place markers for
Console.js:61 Zoom level changed to: 15 Total markers: 0
Console.js:61 Marker placement effect running - videos: 0 googleMap: true
Console.js:61 No videos to place markers for
Console.js:61 Zoom level changed to: 19 Total markers: 0
Console.js:61 Marker placement effect running - videos: 0 googleMap: true
Console.js:61 No videos to place markers for
Console.js:61 Zoom level changed to: 19 Total markers: 0
Console.js:61 🔐 iOS: Checking existing permissions before request...
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 0, isMobileDevice: false, shouldShowSwitch: false, cameraReady: false, isRecording: false, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: false, isRecording: false, shouldShowRecord: false, availableCamerasCount: 0, videoRefHasStream: false, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: false, isRecording: false, hasVideoStream: false, shouldShow: false, …}
Console.js:61 🔐 iOS PERMISSION CHECK: {camera: 'granted', microphone: 'granted'}
Console.js:61 ✅ iOS: Permissions already granted, no prompt needed
Console.js:61 📷 Attempting user camera with constraints: {width: {…}, height: {…}, frameRate: {…}, facingMode: {…}}
Console.js:61 ✅ iOS: Permissions granted and stored in localStorage
Console.js:61 ✅ user camera initialized: 1920x1080
Console.js:61 📷 Camera facing mode: unknown
Console.js:61 Video track settings: {aspectRatio: 1.7777777777777777, deviceId: 'b7c8332573fb493df969b606bc21b908cf863cf726f6dea1ae59d87ce7445826', frameRate: 30, groupId: '0508fd7b2e3363226f402466a864c3751af01d56db41f83389d38e53eba46409', height: 1080, …}
Console.js:61 Audio tracks found: 1
Console.js:61 Video tracks found: 1
Console.js:61 🎯 IPAD DEBUG: Setting srcObject on video element
Console.js:61 🎯 IPAD DETECTION: {userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) Ap…KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36', platform: 'MacIntel', maxTouchPoints: 0, isIpad: false}
Console.js:61 📷 Available cameras: 1 [{…}]
Console.js:61 🎯 DEBUG: Setting cameraReady to true, availableCameras count: 0
Console.js:61 🎯 CAMERA INIT: About to set cameraReady to true after user camera initialization
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: false, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: false, shouldShowRecord: true, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: false, hasVideoStream: true, shouldShow: true, …}
Console.js:61 🎯 IPAD DEBUG: Video metadata loaded, cameraReady before: false
Console.js:61 🎯 IPAD DEBUG: Video metadata loaded, cameraReady after setCameraReady(true)
Console.js:61 🎯 IPAD DEBUG: Video can play, forcing cameraReady to true
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: false, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: false, shouldShowRecord: true, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: false, hasVideoStream: true, shouldShow: true, …}
Console.js:61 🎯 IPAD DEBUG: Video play event, forcing cameraReady to true
Console.js:61 🎯 IPAD DEBUG: Video is playing, forcing cameraReady to true
Console.js:61 🎯 IPAD FIX: Universal backup timer (500ms) ensuring cameraReady stays true
Console.js:61 🎯 IPAD FIX: Universal backup timer (1000ms) ensuring cameraReady stays true
Console.js:61 🔍 DIAGNOSTIC: MediaRecorder format support analysis
Console.js:61 Browser: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Console.js:61 Format "video/webm; codecs="vp8,opus"": SUPPORTED
Console.js:61 Format "video/webm; codecs="vp9,opus"": SUPPORTED
Console.js:61 Format "video/webm; codecs="vp8"": SUPPORTED
Console.js:61 Format "video/webm": SUPPORTED
Console.js:61 Format "video/mp4; codecs="avc1.42001E, mp4a.40.2"": SUPPORTED
Console.js:61 Format "video/mp4; codecs="avc1.4D401E, mp4a.40.2"": SUPPORTED
Console.js:61 Format "video/mp4": SUPPORTED
Console.js:61 Format "video/x-matroska;codecs=avc1": SUPPORTED
Console.js:61 🎥 Recording at 1920x1080 with target bitrate: 8Mbps
Console.js:61 ✅ Selected format: video/webm; codecs="vp9,opus" with 8Mbps video bitrate
Console.js:61 Recording with audio tracks: 1
Console.js:61 MediaRecorder MIME type: video/webm; codecs="vp9,opus"
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 IPAD FIX: Universal backup timer (2000ms) ensuring cameraReady stays true
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 Data chunk received, size: 541083
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 Data chunk received, size: 964403
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 Data chunk received, size: 1050648
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: true, isRecording: true, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: true, isRecording: true, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: true, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: true, isRecording: true, hasVideoStream: true, shouldShow: false, …}
Console.js:61 Final recording duration captured: 3.764 seconds
Console.js:61 🎯 SWITCH BUTTON DEBUG: {availableCamerasCount: 1, isMobileDevice: false, shouldShowSwitch: false, cameraReady: false, isRecording: false, …}
Console.js:61 🎯 RECORD BUTTON DEBUG: {cameraReady: false, isRecording: false, shouldShowRecord: false, availableCamerasCount: 1, videoRefHasStream: false, …}
Console.js:61 🎯 IPAD RECORD BUTTON RENDER: {isIpad: false, cameraReady: false, isRecording: false, hasVideoStream: false, shouldShow: false, …}
Console.js:61 Data chunk received, size: 1142150
Console.js:61 Final blob created, size: 3698284 type: video/webm;codecs=vp9,opus
Console.js:61 🔍 DIAGNOSTIC: Binary data inspection
Console.js:61 🔍 Testing local video playback before upload...
Console.js:61 📥 Local Playback: Starting to load video...
Console.js:61 First 16 bytes (hex): 1a45dfa39f4286810142f7810142f281
Console.js:61 First 16 bytes (decimal): (16) [26, 69, 223, 163, 159, 66, 134, 129, 1, 66, 247, 129, 1, 66, 242, 129]
Console.js:61 WebM EBML signature valid: true
Console.js:61 Number of chunks received: 4
Console.js:61 Chunk 0: 541083 bytes, type: video/webm;codecs=vp9,opus
Console.js:61 Chunk 1: 964403 bytes, type: video/webm;codecs=vp9,opus
Console.js:61 Chunk 2: 1050648 bytes, type: video/webm;codecs=vp9,opus
Console.js:61 Chunk 3: 1142150 bytes, type: video/webm;codecs=vp9,opus
Console.js:61 ✅ Local Playback: Video loaded metadata successfully!
Console.js:61 ✅ Local Playback: Duration: Infinity seconds
Console.js:61 ✅ Local Playback: Video dimensions: 1920x1080
Console.js:61 ✅ Local Playback: Ready state: 4
Console.js:61 Using actual recorded duration: 0 seconds
Console.js:61 ✅ Local Playback: Video can start playing
Console.js:61 Preview video duration change: Infinity
Console.js:61 Preview video duration: Infinity readyState: 4
Console.js:61 Preview video duration change: 3.772
Console.js:61 🚀 FIXED UPLOAD: Using direct binary transfer to prevent corruption
Console.js:61 Using recorded video duration: 3.772 seconds
Console.js:61 Converted Blob to File: {originalType: 'video/webm;codecs=vp9,opus', newType: 'video/webm', cleanMimeType: 'video/webm', filename: 'recorded-video.webm', size: 3698284}
Console.js:61 🔍 FRONTEND: Final video file details being sent: {type: 'video/webm', size: 3698284, isFile: true, isBlob: true, name: 'recorded-video.webm', …}
Console.js:61 🔍 FRONTEND: FormData prepared, sending to /api/videos/upload-binary
Console.js:61 🔍 FRONTEND: Using chunked upload to bypass proxy size limits
Console.js:61 🔍 FRONTEND: File size: 3698284 bytes
Console.js:61 🔍 FRONTEND: Will upload in 4 chunks of 1048576 bytes each
Console.js:61 🔍 FRONTEND: Upload initialized with ID: 74321ad0-41da-492a-ba0a-11b7013cb1b4
Console.js:61 🔍 FRONTEND: Uploading chunk 1/4 (1048576 bytes)
Console.js:61 🔍 FRONTEND: Sending chunk FormData: {chunkSize: 1048576, uploadId: '74321ad0-41da-492a-ba0a-11b7013cb1b4', chunkIndex: 0, formDataKeys: Array(3)}
Console.js:61 🔍 FRONTEND: Chunk upload response: 200 OK
Console.js:61 ✅ FRONTEND: Chunk upload result: {message: 'Chunk uploaded successfully'}
Console.js:61 ✅ FRONTEND: Chunk 1 uploaded successfully
Console.js:61 🔍 FRONTEND: Uploading chunk 2/4 (1048576 bytes)
Console.js:61 🔍 FRONTEND: Sending chunk FormData: {chunkSize: 1048576, uploadId: '74321ad0-41da-492a-ba0a-11b7013cb1b4', chunkIndex: 1, formDataKeys: Array(3)}
Console.js:61 🔍 FRONTEND: Chunk upload response: 200 OK
Console.js:61 ✅ FRONTEND: Chunk upload result: {message: 'Chunk uploaded successfully'}
Console.js:61 ✅ FRONTEND: Chunk 2 uploaded successfully
Console.js:61 🔍 FRONTEND: Uploading chunk 3/4 (1048576 bytes)
Console.js:61 🔍 FRONTEND: Sending chunk FormData: {chunkSize: 1048576, uploadId: '74321ad0-41da-492a-ba0a-11b7013cb1b4', chunkIndex: 2, formDataKeys: Array(3)}
Console.js:61 🔍 FRONTEND: Chunk upload response: 200 OK
Console.js:61 ✅ FRONTEND: Chunk upload result: {message: 'Chunk uploaded successfully'}
Console.js:61 ✅ FRONTEND: Chunk 3 uploaded successfully
Console.js:61 🔍 FRONTEND: Uploading chunk 4/4 (552556 bytes)
Console.js:61 🔍 FRONTEND: Sending chunk FormData: {chunkSize: 552556, uploadId: '74321ad0-41da-492a-ba0a-11b7013cb1b4', chunkIndex: 3, formDataKeys: Array(3)}
Console.js:61 🔍 FRONTEND: Chunk upload response: 200 OK
Console.js:61 ✅ FRONTEND: Chunk upload result: {message: 'Chunk uploaded successfully'}
Console.js:61 ✅ FRONTEND: Chunk 4 uploaded successfully
Console.js:61 🔍 FRONTEND: Completing chunked upload...
Console.js:61 🔍 FRONTEND: Response received: {status: 200, statusText: 'OK', headers: {…}}